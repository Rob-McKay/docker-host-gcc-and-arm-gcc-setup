#FROM ubuntu:latest
ARG BUILDKIT_SBOM_SCAN_CONTEXT=true
FROM ubuntu:24.04

ENV ARM_GCC_PATH=/opt/gcc-arm-none-eabi
ARG ARM_GCC_VER=14.2.rel1
ARG CMAKE_VER=3.31.6
ARG HOST_GCC_VER=14
ARG CLANG_TIDY_VER=20

LABEL Description="Image for building and debugging arm-embedded projects using the GCC ${ARM_GCC_VER} ARM toolchain which also has the host gcc-${HOST_GCC_VER} toolchain installed. Includes CMake ${CMAKE_VER}, clang-tidy and Python 3"
LABEL maintainer="Rob McKay"

# wget is needed to get the clang key and ARM toolchain
RUN apt-get update && apt-get install -y -f  --no-install-recommends wget software-properties-common ca-certificates manpages- manpages-dev- 

# Copy the CA certificate from the context to the build container
#COPY zscaler-root-ca.crt /usr/local/share/ca-certificates/
#COPY zscaler-root-ca-zscalertwo.net.crt /usr/local/share/ca-certificates/
#COPY zscaler-root-ca-t.crt /usr/local/share/ca-certificates/
# Update the CA certificates in the container
RUN update-ca-certificates

RUN wget -qO - https://apt.llvm.org/llvm-snapshot.gpg.key | tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc

#RUN wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh &&  ./llvm.sh ${CLANG_TIDY_VER} clang-tidy 
RUN apt-add-repository "deb https://apt.llvm.org/noble/ llvm-toolchain-noble main" && \
 apt-add-repository "deb https://apt.llvm.org/noble/ llvm-toolchain-noble-${CLANG_TIDY_VER} main" && \
 apt-get update

#RUN apt-get install -y clang-tidy-${CLANG_TIDY_VER}

#RUN apt update && apt upgrade -y

# wget is needed to get the toolchain

RUN apt-get update && \
    apt-get install -y -f libc6-dev --no-install-recommends && \
    apt-get install -y -f \
        bc \
        binutils \
        binutils-common \
        bison \
        build-essential \
        bzip2 \
        flex \
        gcc-${HOST_GCC_VER} \
        libssl-dev \
        ninja-build \
        python3 \
        python3-pip \
        pylint \
        clang-tidy-${CLANG_TIDY_VER} \
        git \
        zip \
        manpages- manpages-dev- --no-install-recommends && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    cpan install Digest::CRC

WORKDIR /opt
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VER}/cmake-${CMAKE_VER}-linux-x86_64.sh -O cmake-linux-x86_64.sh -q --no-check-certificate && \
    chmod +x cmake-linux-x86_64.sh && \
    ./cmake-linux-x86_64.sh  --prefix=/opt --include-subdir --skip-licence && \
    rm cmake-linux-x86_64.sh

# get the toolchain
RUN wget https://developer.arm.com/-/media/Files/downloads/gnu/${ARM_GCC_VER}/binrel/arm-gnu-toolchain-${ARM_GCC_VER}-x86_64-arm-none-eabi.tar.xz -O gcc-arm-none-eabi.tar.xz -q --no-check-certificate && \
    mkdir $ARM_GCC_PATH && \
    tar xf gcc-arm-none-eabi.tar.xz -C $ARM_GCC_PATH --strip-components 1 && \
    rm gcc-arm-none-eabi.tar.xz && \
    rm -rf $ARM_GCC_PATH/share/doc/ $ARM_GCC_PATH/share/gcc-arm-none-eabi/samples/

# add the tools to the path
ENV PATH="/opt/cmake-${CMAKE_VER}-linux-x86_64/bin:$ARM_GCC_PATH/bin:${PATH}"
WORKDIR /home/build
